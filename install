#!/usr/bin/env python
import glob
import os
import shutil
import sys

DOTFILES = "dotfiles"


def check_sanity():
    if not os.path.exists(DOTFILES):
        print("cannot find directory '%s'!" % DOTFILES)
        print("check out this project in your home directory")
        print("and call '%s/install' from there." % DOTFILES)
        sys.exit(1)


def link_config():
    print("-- link config")
    links = []
    for target in glob.glob(os.path.join(DOTFILES, "dotconfig", "*")):
        linkname = target.replace(os.path.join(DOTFILES, "dotconfig"), ".config")
        target = os.path.abspath(target)
        links.append((target, linkname))

    for target in glob.glob(os.path.join(DOTFILES, "_*")):
        linkname = target.replace(os.path.join(DOTFILES, "_"), ".")
        links.append((target, linkname))

    for target, linkname in links:
        print("---- create %s" % linkname)
        if os.path.lexists(linkname):
            if os.path.islink(linkname):
                print("------ remove existing link %s" % linkname)
                os.remove(linkname)
            else:
                linkname_backup = "%s-backup" % linkname
                print("------ move %s to %s" % (linkname, linkname_backup))
                shutil.move(linkname, linkname_backup)
        print("------ link %s to %s" % (linkname, target))
        linkdir = os.path.dirname(linkname)
        if linkdir and not os.path.exists(linkdir):
                print("------ create dir %s" % linkdir)
                os.makedirs(linkdir)
        targetdir = os.path.dirname(target)
        if targetdir and not os.path.exists(targetdir):
            print("------ create dir %s" % targetdir)
            os.makedirs(targetdir)
        os.symlink(target, linkname)


if __name__ == "__main__":
    check_sanity()
    link_config()
    print("done.")
